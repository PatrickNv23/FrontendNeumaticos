{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthGuard {\n  constructor() {\n    this.userTest = {\n      user: \"user\",\n      password: \"password\"\n    };\n  }\n  canActivate(route, state) {\n    let user = \"user\";\n    let password = \"password\";\n    if (user !== this.userTest.user || password !== this.userTest.password) {\n      return false;\n    }\n    return true;\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)();\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,SAAS;EAHtBC;IAKE,aAAQ,GAAG;MACTC,IAAI,EAAE,MAAM;MACZC,QAAQ,EAAE;KACX;;EAEDC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAC1B,IAAIJ,IAAI,GAAG,MAAM;IACjB,IAAIC,QAAQ,GAAG,UAAU;IACzB,IAAKD,IAAI,KAAK,IAAI,CAACK,QAAQ,CAACL,IAAI,IAAMC,QAAQ,KAAK,IAAI,CAACI,QAAQ,CAACJ,QAAS,EAAE;MAC1E,OAAO,KAAK;;IAEd,OAAO,IAAI;EACb;;AAhBWH,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAQ,SAATR,SAAS;EAAAS,YAFR;AAAM","names":["AuthGuard","constructor","user","password","canActivate","route","state","userTest","factory","providedIn"],"sourceRoot":"","sources":["E:\\Dasser\\Reto-Fullstack-ECommerce\\frontend-web-neumaticos\\src\\app\\core\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  userTest = {\n    user: \"user\",\n    password: \"password\"\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    let user = \"user\";\n    let password = \"password\";\n    if ((user !== this.userTest.user) || (password !== this.userTest.password)) {\n      return false;\n    }\n    return true;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}